@model MVC.Models.AddBalanceViewModel

@{
    ViewData["Title"] = "Add Balance";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<h2 class="text-center mt-5">@ViewData["Title"]</h2>

<div class="container mt-3">
    <form asp-action="AddBalance" method="post" class="w-50 mx-auto shadow p-4 mb-4 bg-white">
        <div class="form-group">
            <label asp-for="CardNumber" class="control-label">Card Number</label>
            <input asp-for="CardNumber" class="form-control" readonly />
            <span asp-validation-for="CardNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Amount" class="control-label">Amount</label>
            <input asp-for="Amount" class="form-control" />
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>
        <input type="hidden" asp-for="CardId" />
        <div class="text-center">
            <button type="submit" class="btn btn-primary">Add Balance</button>
            <a class="btn btn-secondary" href="@Url.Action("Profile", "Home")">Return</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<style>
    .container {
        max-width: 500px; /* Restriction de la largeur pour une meilleure esthétique */
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out; /* Transitions pour une interaction fluide */
    }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
        }

    .btn-primary {
        width: 100%; /* Bouton de largeur complète pour une consistance visuelle */
    }

    .btn-secondary {
        width: 100%; /* Même largeur que le bouton principal */
    }
</style>
